# Based on https://mozilla.github.io/server-side-tls/ssl-config-generator/
# and https://letsecure.me/secure-web-deployment-with-lets-encrypt-and-nginx/
server {
    listen 80;
    listen 443 ssl http2;
    server_name sbsolidarity.org;
    ssl_protocols TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_prefer_server_ciphers on;
    ssl_certificate /etc/pki/tls/certs/sbsolidarity.pem;
    ssl_certificate_key /etc/pki/tls/domain.key;
    ssl_trusted_certificate /etc/pki/tls/certs/lets-encrypt-x3-cross-signed.pem;
    ssl_session_cache shared:SSL:128m;

    add_header Strict-Transport-Security "max-age=15768000; includeSubDomains";
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Xss-Protection "1";

    ssl_stapling on;
    ssl_stapling_verify on;

    return       301 https://www.sbsolidarity.org$request_uri;
}

server {
    listen 80;
    listen 443 ssl http2;
    server_name sbsolidarity.org www.sbsolidarity.org;
    ssl_protocols TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_prefer_server_ciphers on;
    ssl_certificate /etc/pki/tls/certs/sbsolidarity.pem;
    ssl_certificate_key /etc/pki/tls/domain.key;
    ssl_trusted_certificate /etc/pki/tls/certs/lets-encrypt-x3-cross-signed.pem;
    ssl_session_cache shared:SSL:128m;

    add_header Strict-Transport-Security "max-age=15768000; includeSubDomains";
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Xss-Protection "1";

    ssl_stapling on;
    ssl_stapling_verify on;

    # Your favorite resolver may be used instead of the Google one below
    resolver 8.8.8.8;
    root /var/www/current;
    index index.html;

    passenger_enabled on;
    passenger_app_type node;
    passenger_startup_file /var/www/current/index.js;

    location / {
        if ($scheme = http) {
            return 301 https://$server_name$request_uri;
        }
    }
}
